{
  "name": "mortgagematch-pro-mobile",
  "version": "1.0.0",
  "description": "AI-powered mortgage intelligence mobile app with advanced analytics and broker portal",
  "main": "index.js",
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "android": "react-native run-android",
    "ios": "react-native run-ios",
    "test": "jest",
    "test:coverage": "jest --coverage --config tests/jest.config.js",
    "lint": "eslint . --ext .js,.jsx,.ts,.tsx",
    "lint:fix": "eslint . --ext .js,.jsx,.ts,.tsx --fix",
    "type-check": "tsc --noEmit",
    "build:android": "cd android && ./gradlew assembleRelease",
    "build:ios": "cd ios && xcodebuild -workspace MortgageMatchPro.xcworkspace -scheme MortgageMatchPro -configuration Release -destination generic/platform=iOS -archivePath MortgageMatchPro.xcarchive archive",
    "clean": "react-native clean",
    "reset-cache": "npx react-native start --reset-cache",
    "db:setup": "./scripts/setup-supabase-database.sh --remote",
    "db:setup:local": "./scripts/setup-supabase-database.sh --local",
    "db:setup:dry-run": "./scripts/setup-supabase-database.sh --dry-run",
    "db:migrate": "node scripts/run-migrations.js",
    "db:migrate:dry-run": "node scripts/run-migrations.js --dry-run",
    "security:audit": "node scripts/security-audit.js",
    "security:check": "npm audit --audit-level=moderate",
    "performance:audit": "node scripts/performance-audit.js",
    "audit:all": "npm run security:audit && npm run performance:audit && npm run security:check",
    "precommit": "npm run lint && npm run type-check && npm run test:coverage",
    "prebuild": "npm run audit:all",
    "training:prepare": "npx ts-node training/prepareDataset.ts",
    "training:run": "node training/runFineTune.mjs",
    "training:list-datasets": "node training/runFineTune.mjs list-datasets",
    "training:list-jobs": "node training/runFineTune.mjs list-jobs",
    "training:test": "node training/runFineTune.mjs test",
    "training:rollback": "node training/runFineTune.mjs rollback",
    "toggle:personalization": "node scripts/toggle-feature.js personalization",
    "toggle:crm_export": "node scripts/toggle-feature.js crm_export",
    "toggle:fine_tune": "node scripts/toggle-feature.js fine_tune",
    "toggle:regional_rates": "node scripts/toggle-feature.js regional_rates",
    "toggle:explainability": "node scripts/toggle-feature.js explainability",
    "toggle:confidence_indicators": "node scripts/toggle-feature.js confidence_indicators",
    "toggle:developer_playground": "node scripts/toggle-feature.js developer_playground",
    "toggle:advanced_analytics": "node scripts/toggle-feature.js advanced_analytics",
    "metrics:ai": "node scripts/show-metrics.js ai",
    "metrics:regional": "node scripts/show-metrics.js regional",
    "metrics:training": "node scripts/show-metrics.js training",
    "metrics:health": "node scripts/show-metrics.js health",
    "ethics:report": "node scripts/generate-ethics-report.js",
    "ethics:fairness": "node scripts/run-fairness-check.js",
    "playground:test": "node scripts/developer-playground.js",
    "playground:history": "node scripts/developer-playground.js --history",
    "integration:status": "node scripts/check-integrations.js",
    "integration:test": "node scripts/test-integrations.js",
    "integration:health": "node scripts/check-integration-health.js",
    "performance:report": "curl -s http://localhost:3000/api/performance/report | jq",
    "performance:profile": "node scripts/performance-profiler.mjs",
    "performance:benchmark": "node scripts/performance-benchmark.js",
    "refactor:verify": "npm run lint && npm run type-check && npm run test:coverage && npm run performance:profile",
    "change:impact": "node scripts/change-impact-analysis.mjs",
    "dev:clean": "node scripts/dev-clean.mjs",
    "docs:generate": "node scripts/generate-api-reference.mjs",
    "pre-commit": "node scripts/change-impact-analysis.mjs",
    "incident:template": "node scripts/incident-template-generator.mjs --generic",
    "incident:create": "node scripts/incident-template-generator.mjs --data",
    "telemetry:health": "curl -s http://localhost:3000/api/observability/metrics?serviceId=api&metricName=service.uptime.percent | jq",
    "telemetry:alerts": "curl -s http://localhost:3000/api/observability/alerts | jq",
    "telemetry:incidents": "curl -s http://localhost:3000/api/observability/incidents | jq",
    "compliance:scan": "node scripts/compliance-scan.mjs",
    "compliance:report": "node scripts/compliance-scan.mjs && cat compliance-scan-report.json | jq",
    "data:retention": "node -e \"const { DataRetentionService } = require('./core/compliance/data-retention.ts'); console.log('Data retention service loaded');\"",
    "dev:doctor": "node scripts/dev-doctor.mjs",
    "structure:standardize": "node scripts/standardize-structure.mjs",
    "build:core": "tsc --project core/tsconfig.json",
    "build:shared": "tsc --project shared/tsconfig.json",
    "test:unit": "jest tests/unit --config tests/jest.config.js",
    "test:integration": "jest tests/integration --config tests/jest.config.js",
    "test:e2e": "playwright test",
    "test:all": "npm run test:unit && npm run test:integration && npm run test:e2e",
    "test:watch": "jest --watch --config tests/jest.config.js",
    "test:ci": "jest --ci --coverage --config tests/jest.config.js",
    "performance:bundle": "node scripts/bundle-optimizer.mjs",
    "performance:all": "npm run performance:profile && npm run performance:bundle",
    "build:optimize": "npm run build && npm run performance:bundle",
    "bundle:analyze": "node scripts/bundle-report.mjs",
    "bundle:check": "node scripts/bundle-report.mjs --check",
    "bundle:budget": "node scripts/bundle-report.mjs --budget",
    "migrate:emc": "npx ts-node scripts/migrate-emc.ts",
    "dr:rehearsal": "npx ts-node scripts/clone-and-restore-check.ts",
    "slo:check": "npx ts-node scripts/slo-checker.ts",
    "feature-flags:init": "node -e \"const { initializeFeatureFlags } = require('./lib/feature-flags.ts'); initializeFeatureFlags({ supabaseUrl: process.env.SUPABASE_URL, supabaseAnonKey: process.env.SUPABASE_ANON_KEY });\"",
    "maintenance:enable": "node -e \"const { getFeatureFlagsClient } = require('./lib/feature-flags.ts'); getFeatureFlagsClient().isEnabled('maintenance_mode').then(console.log);\"",
    "maintenance:disable": "node -e \"console.log('Use Supabase dashboard to disable maintenance_mode flag');\"",
    "ai:health": "npx ts-node ai/self_diagnose.ts",
    "ai:insights": "node ai/insights_agent.mjs",
    "ai:scale": "npx ts-node ai/ai_autoscale.ts",
    "ai:privacy": "npx ts-node ai/privacy_guard.ts",
    "ai:config": "node -e \"console.log(JSON.stringify(require('./ai/agent_config.json'), null, 2))\"",
    "future:check": "npx ts-node scripts/futurecheck.ts",
    "embeddings:generate": "node scripts/generate-embeddings.mjs",
    "embeddings:search": "node scripts/generate-embeddings.mjs --search",
    "embeddings:cleanup": "node scripts/generate-embeddings.mjs --cleanup",
    "watcher:db": "npx ts-node watchers/db_integrity.watcher.ts",
    "watcher:api": "npx ts-node watchers/api_contract.watcher.ts",
    "watcher:ai": "npx ts-node watchers/ai_performance.watcher.ts",
    "watcher:all": "npm run watcher:db && npm run watcher:api && npm run watcher:ai",
    "watcher:notify": "npx ts-node watchers/watcher_notifier.ts",
    "ai:audit": "npm run ai:health && npm run ai:insights && npm run future:check && npm run ai:privacy && npm run ai:scale",
    "ai:lint": "npx ts-node ai/privacy_guard.ts audit",
    "docs:ai": "node scripts/generate-api-reference.mjs && node scripts/generate-architecture-map.mjs",
    "release:ai": "node scripts/release-notes-ai.mjs",
    "onboard:ai": "node scripts/onboard-ai.mjs"
  },
  "dependencies": {
    "@hookform/resolvers": "^3.3.2",
    "@prisma/client": "^6.18.0",
    "@radix-ui/react-dialog": "^1.1.15",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-select": "^2.2.6",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-tabs": "^1.1.13",
    "@react-native-async-storage/async-storage": "^1.19.5",
    "@react-navigation/bottom-tabs": "^6.5.11",
    "@react-navigation/drawer": "^6.6.6",
    "@react-navigation/native": "^6.1.9",
    "@react-navigation/stack": "^6.3.20",
    "@sendgrid/mail": "^8.1.6",
    "@supabase/auth-helpers-nextjs": "^0.8.7",
    "@supabase/auth-helpers-react": "^0.4.2",
    "@supabase/auth-ui-react": "^0.4.7",
    "@supabase/auth-ui-shared": "^0.1.8",
    "@supabase/supabase-js": "^2.38.4",
    "autoprefixer": "^10.4.21",
    "axios": "^1.6.2",
    "babel-plugin-module-resolver": "^5.0.2",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "date-fns": "^2.30.0",
    "dotenv": "^17.2.3",
    "glob": "^11.0.3",
    "graphql-yoga": "^5.16.0",
    "i18next": "^23.7.6",
    "ioredis": "^5.8.2",
    "lucide-react": "^0.548.0",
    "next": "^14.2.33",
    "openai": "^6.7.0",
    "postcss": "^8.5.6",
    "prisma": "^6.18.0",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-hook-form": "^7.48.2",
    "react-i18next": "^13.5.0",
    "react-native": "^0.72.17",
    "react-native-background-job": "^1.2.0",
    "react-native-biometrics": "^3.0.1",
    "react-native-calendars": "^1.1302.0",
    "react-native-camera": "^4.2.1",
    "react-native-chart-kit": "^6.12.0",
    "react-native-device-info": "^10.11.0",
    "react-native-document-picker": "^9.1.1",
    "react-native-elements": "^3.4.3",
    "react-native-firebase": "^5.6.0",
    "react-native-flash-message": "^0.4.2",
    "react-native-fs": "^2.20.0",
    "react-native-gesture-handler": "^2.13.4",
    "react-native-image-picker": "^7.0.3",
    "react-native-keychain": "^8.1.3",
    "react-native-linear-gradient": "^2.8.3",
    "react-native-localize": "^2.2.2",
    "react-native-modal": "^13.0.1",
    "react-native-network-info": "^5.2.1",
    "react-native-paper": "^5.11.1",
    "react-native-pdf": "^6.7.3",
    "react-native-permissions": "^3.10.1",
    "react-native-pull-to-refresh": "^2.1.3",
    "react-native-push-notification": "^8.1.1",
    "react-native-reanimated": "^3.5.4",
    "react-native-safe-area-context": "^4.7.4",
    "react-native-screens": "^3.25.0",
    "react-native-share": "^9.4.1",
    "react-native-skeleton-placeholder": "^5.2.4",
    "react-native-snap-carousel": "^1.3.1",
    "react-native-sqlite-storage": "^6.0.1",
    "react-native-super-grid": "^4.6.1",
    "react-native-svg": "^13.14.0",
    "react-native-swipe-gestures": "^1.0.5",
    "react-native-toast-message": "^2.1.6",
    "react-native-ui-lib": "^7.6.0",
    "react-native-vector-icons": "^10.0.2",
    "react-query": "^3.39.3",
    "redis": "^5.9.0",
    "stripe": "^19.1.0",
    "tailwind-merge": "^3.3.1",
    "tailwindcss": "^4.1.16",
    "zod": "^3.22.4",
    "zustand": "^4.4.7"
  },
  "devDependencies": {
    "@babel/core": "^7.20.0",
    "@babel/preset-env": "^7.20.0",
    "@babel/runtime": "^7.20.0",
    "@playwright/test": "^1.56.1",
    "@react-native/eslint-config": "^0.72.2",
    "@react-native/metro-config": "^0.72.11",
    "@testing-library/jest-dom": "^6.9.1",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^14.6.1",
    "@tsconfig/react-native": "^3.0.0",
    "@types/node": "^24.9.1",
    "@types/react": "^18.0.24",
    "@types/react-dom": "^18.3.7",
    "@types/react-test-renderer": "^18.0.0",
    "babel-jest": "^29.2.1",
    "eslint": "^8.19.0",
    "jest": "^29.2.1",
    "metro-react-native-babel-preset": "0.76.8",
    "prettier": "^2.4.1",
    "react-test-renderer": "18.2.0",
    "ts-jest": "^29.4.5",
    "typescript": "4.8.4"
  },
  "jest": {
    "preset": "react-native"
  },
  "engines": {
    "node": ">=18.18.0 <20.0.0",
    "npm": ">=8.0.0"
  }
}
