name: SLO Check

on:
  schedule:
    # Run daily at 6 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to check'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - preview

env:
  PRISMA_CLIENT_ENGINE_TYPE: wasm

jobs:
  slo-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install ts-node
      run: npm install -g ts-node

    - name: Run SLO Check
      run: |
        npx ts-node scripts/slo-checker.ts
      env:
        NODE_ENV: ${{ github.event.inputs.environment || 'production' }}
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}

    - name: Upload SLO Report
      uses: actions/upload-artifact@v4
      with:
        name: slo-report
        path: reports/slo/
        retention-days: 30

    - name: Create Issue on SLO Violation
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: '‚ö†Ô∏è SLO Violation Detected',
            body: `SLO check failed for ${{ github.event.inputs.environment || 'production' }} environment.
            
            **Workflow**: ${context.workflow}
            **Run ID**: ${context.runId}
            **Commit**: ${context.sha}
            
            Check the SLO report artifact for detailed metrics and recommendations.`,
            labels: ['slo', 'performance', 'incident']
          })

    - name: Comment on PR (if triggered by PR)
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'üìä **SLO Check Completed**: Check the artifacts for the SLO report.'
          })
